@{
    ViewBag.Title = "Display Query Results Demo";
}

<div class="row">
    <div class="col-md-12">
        <h1>Display Query Results Demo</h1>
        <p>Displaying SQL query results and modifying SQL queries while browsing the data.</p>
    </div>
</div>
<div id="main-tabs" class="block-flat">
    <ul>
        <li><a href="#qbtab">Query Builder</a></li>
        <li><a href="#qr">Query Results</a></li>
    </ul>
    <div class="row" id="qbtab">
        <div class="col-md-12">
            <div id="qb"></div>
            <div class="qb-ui-layout">
                <div class="qb-ui-layout__top">
                    <div class="qb-ui-layout__left">
                        <div class="qb-ui-structure-tabs">
                            <div class="qb-ui-structure-tabs__tab">
                                <input type="radio" id="tree-tab" name="qb-tabs" checked />
                                <label for="tree-tab">Database</label>
                                <div class="qb-ui-structure-tabs__content">
                                    <div id="treeview"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="qb-ui-layout__right">
                        <div id="navbar"></div>
                        <div id="canvas"></div>
                        <div id="statusbar"></div>
                        <div id="grid"></div>
                    </div>
                </div>
                <div class="qb-ui-layout__bottom">
                    <div id="sql"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="row" id="qr">
        <div class="col-md-3">
            <div class="table-params"></div>
        </div>
        <div class="col-md-2">
            <button class="btn btn-primary execute">Apply</button>
        </div>
        <div class="col-md-12">
            <div id="cb"></div>
        </div>
        <div class="col-md-12">
            <div class="alert alert-danger"></div>
            <div id="dataExplorerContainer" class="block-flat">
                <!--div id="ur">
                    <span>Use this transformed query for your own implementation:</span>
                    <br />
                    <span class="sql"></span>
                </div-->
            </div>
        </div>
    </div>
</div>

@section styles {
    <link type="text/css" rel="stylesheet" href="https://jqwidgets.com/public/jqwidgets/styles/jqx.base.css" />
    <link type="text/css" rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css" />
    <link type="text/css" rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css" />
    <link type="text/css" rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/5.11.0/jsoneditor.min.css" />
    <link type="text/css" rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.26.0/codemirror.min.css" />

    <style>
        #qb, #qr {
            padding: 5px;
        }

        #jsoneditor {
            height: 500px;
        }

        .link-to-grid-site {
            float: right;
            color: blue !important;
        }

        .jsonPage {
            margin-left: 5px;
            font-weight: bold;
        }

        .execute, .alert-danger {
            display: none;
        }

        .recordsCount {
            float: right;
        }
    </style>
}

@section scripts {
    <script src="https://code.jquery.com/ui/1.12.0/jquery-ui.min.js"></script>
    <script src="https://jqwidgets.com/public/jqwidgets/jqx-all.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.14.1/react.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.14.1/react-dom.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react-data-grid/2.0.78/react-data-grid.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/5.11.0/jsoneditor.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.26.0/codemirror.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.26.0/mode/sql/sql.min.js"></script>

    <script type="text/javascript" src="/aqb.client.js"></script>
    <script src="~/js/queryResults.js"></script>
    <script src="~/js/paramsController.js"></script>
    <script src="~/js/dataExplorer.js"></script>
    <script src="~/js/jqxGridDataExplorer.js"></script>
    <script src="~/js/jsGridDataExplorer.js"></script>
    <script src="~/js/reactGridDataExplorer.js"></script>
    <script src="~/js/jsonDataExplorer.js"></script>

    <script>
        // Instance identifier string to bind to the QueryBuilder component on the server side. See the QueryResultsDemoController.cs code for details.
        var name = 'QueryResults';
        var dataUrl = "QueryResultsDemo/GetData";
        var recordsCountUrl = "QueryResultsDemo/SelectRecordsCount";

        $(function () {
            AQB.Web.UI.QueryBuilder(name, $('#qb'));
            AQB.Web.UI.CriteriaBuilder(name, $('#cb'));
            AQB.Web.UI.ObjectTreeView(name, $('#treeview'));
            AQB.Web.UI.SubQueryNavigationBar(name, $('#navbar'));
            AQB.Web.UI.Canvas(name, $('#canvas'));
            AQB.Web.UI.StatusBar(name, $('#statusbar'));
            AQB.Web.UI.Grid(name, $('#grid'), { orColumnCount: 0, useCustomExpressionBuilder: AQB.Web.UI.Enums.AffectedColumns.ExpressionColumn });
            AQB.Web.UI.SqlEditor(name, $('#sql'));

            AQB.Web.UI.startApplication(name);

            var container = $('#dataExplorerContainer');

            // var dataExplorer = new JqxGridDataExplorer(container, dataUrl, recordsCountUrl);
            // var dataExplorer = new JsGridDataExplorer(container, dataUrl, recordsCountUrl);
            // var dataExplorer = new ReactGridDataExplorer(container, dataUrl, recordsCountUrl);
            var dataExplorer = new JsonDataExplorer(container, dataUrl, recordsCountUrl);

            QueryResultsDemo(dataExplorer);

        });
    </script>
}