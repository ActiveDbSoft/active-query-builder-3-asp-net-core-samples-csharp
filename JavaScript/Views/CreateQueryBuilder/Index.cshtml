@{
    ViewBag.Title = "Deferred Query Builder Creation Demo";
}

<div class="row">
    <div class="col-md-12">
        <h1>Deferred Query Builder Creation Demo</h1>
        <p>
            This sample demonstrates creation of the controls by JavaScript on client-side and deferred initialization of the server side component.
        </p>
        <p>
            Click the "Create markup" button to display the component's UI and then the "Connect to server" button to initialize the component on the server side.<br/>
            <button id="render" class="btn btn-default">Create markup</button>
            <button id="connect" class="btn btn-primary" style="display: none">Connect to server</button>
            <button id="dispose" class="btn btn-primary" style="display: none">Dispose</button>
        </p>
    </div>
<div class="col-md-12">
    <div id="qb"></div>
    <div class="qb-ui-layout">
        <div class="qb-ui-layout__top">
            <div class="qb-ui-layout__left">
                <div class="qb-ui-structure-tabs">
                    <div class="qb-ui-structure-tabs__tab">
                        <input type="radio" id="tree-tab" name="qb-tabs" checked />
                        <label for="tree-tab">Database</label>
                        <div class="qb-ui-structure-tabs__content">
                            <div id="treeview"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="qb-ui-layout__right">
                <div id="navbar"></div>
                <div id="canvas"></div>
                <div id="statusbar"></div>
                <div id="grid"></div>
            </div>
        </div>
        <div class="qb-ui-layout__bottom">
            <div id="sql"></div>
        </div>
    </div>
</div>
</div>

<script src="aqb.client.js"></script>

@section scripts
{
    <script>
        // Instance identifier string to bind to the QueryBiulder component on the server side. See the CreateQueryBuilderController.cs code for details.
        var instanceId = 'UniqueQueryBuilderName';

        $('#render').click(function () {
            AQB.Web.UI.QueryBuilder(instanceId, $('#qb'));
            AQB.Web.UI.ObjectTreeView(instanceId, $('#treeview'));
            AQB.Web.UI.SubQueryNavigationBar(instanceId, $('#navbar'));
            AQB.Web.UI.Canvas(instanceId, $('#canvas'));
            AQB.Web.UI.StatusBar(instanceId, $('#statusbar'));
            AQB.Web.UI.Grid(instanceId, $('#grid'));
            AQB.Web.UI.SqlEditor(instanceId, $('#sql'));

            $('#render').hide();
            $('#connect').show();
        });

        $('#connect').click(function() {
            AQB.Web.UI.startApplication('/CreateQueryBuilder/CreateQueryBuilder', instanceId);
            $('#connect').hide();
            $('#dispose').show();
        });

        $('#dispose').click(function () {
            AQB.Web.QueryBuilder.dispose();
            $('#connect').show();
            $('#dispose').hide();
        });
    </script>
}
